/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ProdutoController;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import model.entities.Produto;
import persistence.dao.CategoriaDeProdutoDAO;
import persistence.dao.EstoqueDAO;
import persistence.dao.ProdutoDAO;
import persistence.dao.TipoDeProdutoDAO;

/**
 *
 * @author dener
 */
public class ListarProdutosView extends javax.swing.JPanel {
    
    private final MainView context;
    private ArrayList<Produto> arrProdutos;
    private final DefaultListModel<String> modelProdutos;
    private final ProdutoController produtoController;

    /**
     * Creates new form ListarProdutos
     */
    public ListarProdutosView(MainView context) {
        initComponents();
        this.context = context;
        modelProdutos = new DefaultListModel<>();
        this.produtoController = new ProdutoController(new ProdutoDAO(), new CategoriaDeProdutoDAO(), new TipoDeProdutoDAO(), new EstoqueDAO());
        arrProdutos = produtoController.recuperarTodos();
        
        this.produtos.setModel(modelProdutos);
        updateListaDeProdutos(arrProdutos);
    }
    
    private void updateListaDeProdutos(ArrayList<Produto> arr) {
        this.modelProdutos.removeAllElements();
        for(Produto p : arr) {
            this.modelProdutos.addElement(this.produtoController.estoqueDoProduto(p) + "x \t " + p.getNome());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        produtos = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        filtrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        produtos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(produtos);

        jLabel3.setText("Produtos:");

        filtrar.setText("Filtrar");
        filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarActionPerformed(evt);
            }
        });

        jLabel2.setText("Filtrar por nome:");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Listar produtos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filtrar))
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filtrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        String nomeCliente = this.nome.getText();

        if(nomeCliente.length() == 0) {
            updateListaDeProdutos(arrProdutos);
        }
    }//GEN-LAST:event_nomeActionPerformed

    private void filtrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarActionPerformed
        String nomeCliente = this.nome.getText();

        if(nomeCliente.length() == 0) {
            new AlertMessage("Listar Produtos", "Digite o nome do produto");
            updateListaDeProdutos(arrProdutos);
        } else {
            ArrayList<Produto> ans = new ArrayList<>();
            for(Produto p : this.arrProdutos) {
                if(p.getNome().equals(nomeCliente)) {
                    ans.add(p);
                }
            }

            if(ans.size() == 0) {
                updateListaDeProdutos(arrProdutos);
                new AlertMessage("Listar Produtos", "Nenhum Produto Encontrado");
            } else {
                updateListaDeProdutos(ans);
            }
        }
    }//GEN-LAST:event_filtrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton filtrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nome;
    private javax.swing.JList<String> produtos;
    // End of variables declaration//GEN-END:variables
}
